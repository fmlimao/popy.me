openapi: 3.0.0

info:
  title: Popy Me
  description: API do site Popy.Me
  version: 1.0.0

servers:
  - url: http://localhost:10500/api/v1
    description: Servidor local
  - url: https://dev.popy.me/api/v1
    description: Servidor de testes
  - url: https://popy.me/api/v1
    description: Servidor de produção

tags:
  - name: Autenticação
  - name: Usuários
    description: Rotas de controle de usuários

paths:
  /auth:
    post:
      tags:
        - Autenticação
      summary: Realiza a autenticação do usuário.
      description: Esta rota retorna o token, que será necessário para todas as rotas autenticadas.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "email@do-usuario.com"
                password:
                  type: string
                  example: "senhadousuario"
      responses:
        200:
          description: Usuário encontrado.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/DefaultResponse"
                  - type: object
                    properties:
                      content:
                        properties:
                          token:
                            type: string
                            example: token.do.usuario
        400:
          description: Formulário inválido.
        404:
          description: Usuário não encontrado.
        503:
          description: Servidor em manutenção.
        default:
          description: Servidor fora do ar.
  
  /me:
    get:
      tags:
        - Usuários
      security:
        - ApiKeyAuth: []
      summary: Informações do usuário logado.
      description: Esta rota retorna todas as informações do usuário do token enviado.
      responses:
        200:
          description: Usuário encontrado.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/DefaultResponse"
                  - type: object
                    properties:
                      content:
                        properties:
                          me:
                            $ref: "#/components/schemas/User"
        401:
          description: Token inválido.
        503:
          description: Servidor em manutenção.
        default:
          description: Servidor fora do ar.
  
  /users:
    get:
      tags:
        - Usuários
      security:
        - ApiKeyAuth: []
      summary: Retorna a lista de usuários.
      description: Esta rota retorna todas as informações da listagem de usuários.
      responses:
        200:
          description: Usuários encontrados.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/DefaultResponse"
                  - type: object
                    properties:
                      content:
                        properties:
                          users:
                            $ref: "#/components/schemas/ArrayOfUser"
        401:
          description: Token inválido.
        503:
          description: Servidor em manutenção.
        default:
          description: Servidor fora do ar.
    post:
      tags:
        - Usuários
      security:
        - ApiKeyAuth: []
      summary: Insere um usuário.
      description: Esta rota insere e retorna os dados de um usuário.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "Nome do Usuario"
                email:
                  type: string
                  example: "email@do-usuario.com"
                password:
                  type: string
                  example: "senhadousuario"
      responses:
        201:
          description: Usuário inserido.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/DefaultResponse"
                  - type: object
                    properties:
                      code:
                        example: 201
                      content:
                        properties:
                          user:
                            $ref: "#/components/schemas/User"
        400:
          description: Formulário inválido.
        503:
          description: Servidor em manutenção.
        default:
          description: Servidor fora do ar.
  
  /users/:user_id:
    get:
      tags:
        - Usuários
      security:
        - ApiKeyAuth: []
      summary: Retorna um usuário específico.
      description: Esta rota retorna todas as informações de um usuário específico.
      responses:
        200:
          description: Usuário encontrado.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/DefaultResponse"
                  - type: object
                    properties:
                      content:
                        properties:
                          user:
                            $ref: "#/components/schemas/User"
        401:
          description: Token inválido.
        503:
          description: Servidor em manutenção.
        default:
          description: Servidor fora do ar.
    put:
      tags:
        - Usuários
      security:
        - ApiKeyAuth: []
      summary: Edita um usuário.
      description: Esta rota edita e retorna os dados de um usuário.
      requestBody:
        # required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "Nome do Usuario"
                email:
                  type: string
                  example: "email@do-usuario.com"
                password:
                  type: string
                  example: "senhadousuario"
      responses:
        200:
          description: Usuário editado.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/DefaultResponse"
                  - type: object
                    properties:
                      content:
                        properties:
                          user:
                            $ref: "#/components/schemas/User"
        400:
          description: Formulário inválido.
        503:
          description: Servidor em manutenção.
        default:
          description: Servidor fora do ar.
    delete:
      tags:
        - Usuários
      security:
        - ApiKeyAuth: []
      summary: Remove um usuário.
      description: Esta rota remove um usuário.
      responses:
        204:
          description: Usuário removido.
        400:
          description: Formulário inválido.
        503:
          description: Servidor em manutenção.
        default:
          description: Servidor fora do ar.

components:
  schemas:
    DefaultResponse:
      description: Retorno padrão da API.
      type: object
      properties:
        code:
          type: integer
          example: 200
        error:
          type: boolean
          example: false
        messages:
          type: array
          example: []
          items:
            type: string
        content:
          type: object
    User:
      type: object
      properties:
        user_id:
          type: integer
          example: 1
        name:
          type: string
          example: Usuário 1
        email:
          type: string
          example: user1@email.com
        active:
          type: integer
          example: 1
        created_at:
          type: string
          example: "2021-03-29 20:43:30"
    ArrayOfUser:
      type: array
      items:
        $ref: "#/components/schemas/User"
  
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: x-access-token